---
name: Static Check

on:
  workflow_call:
    inputs:
      working_dir:
        type: string
        required: false
      php_version:
        description: PHP version with which the scripts are executed
        default: "8.3"
        required: false
        type: string
      commitlint:
        description: Runs commit lint check on pull request
        default: false
        type: boolean
        required: false
      phpcsfixer:
        description: Runs phpcsfixer check
        default: false
        type: boolean
        required: false
      phpstan:
        description: Runs phpstan check
        default: false
        type: boolean
        required: false
      psalm:
        description: Runs psalm check
        default: false
        type: boolean
        required: false

jobs:
  commitlint:
    if: github.event_name == 'pull_request' && inputs.commitlint
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run commitlint
        run: |
          commit=$(gh api \
            /repos/${{ github.repository }}/pulls/${{github.event.number}}/commits \
            | jq -r '.[0].commit.message' \
            | head -n 1)
          # we can't use npx see https://github.com/conventional-changelog/commitlint/issues/613
          echo '{}' > package.json
          npm install --no-fund --no-audit @commitlint/config-conventional @commitlint/cli
          echo $commit | ./node_modules/.bin/commitlint -g .commitlintrc

  php-cs-fixer:
    name: PHP CS Fixer (PHP ${{ inputs.php_version }})
    if: ${{ inputs.phpcsfixer }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          extensions: intl, bcmath, curl, openssl, mbstring, mongodb
          ini-values: memory_limit=-1
          tools: php-cs-fixer
          coverage: none
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpstan:
    if: ${{ inputs.phpstan }}
    name: PHPStan (PHP ${{ inputs.php_version }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring, mongodb
          coverage: none
          ini-values: memory_limit=-1

      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Update project dependencies
        run: |
          composer update --no-interaction --no-progress --ansi

      - name: Cache PHPStan results
        uses: actions/cache@v4
        with:
          path: /tmp/phpstan
          key: phpstan-php${{ inputs.php_version }}-${{ github.sha }}
          restore-keys: |
            phpstan-php${{ inputs.php_version }}-
            phpstan-
        continue-on-error: true

      - name: Run PHPStan analysis
        run: |
          ./vendor/bin/phpstan --version
          ./vendor/bin/phpstan analyse --no-interaction --no-progress --ansi

  psalm:
    if: ${{ inputs.psalm }}
    name: Psalm (PHP ${{ inputs.php_version }})
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          ini-values: "memory_limit=-1"
          coverage: none

      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Update project dependencies
        run: |
          composer update --no-interaction --no-progress --ansi
          composer require --no-progress --ansi --no-plugins psalm/phar:@stable

      - name: Psalm
        run: |
          ./vendor/bin/psalm.phar --no-progress || ./vendor/bin/psalm.phar --output-format=github --no-progress
